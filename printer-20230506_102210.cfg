[respond]

[pause_resume]

[exclude_object]

[virtual_sdcard]
path: ~/gcode_files
on_error_gcode:
 PAUSE

[firmware_retraction]
retract_length: 0.5
retract_speed: 30
unretract_extra_length: 0
unretract_speed: 30

# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include btt_octopus_pin_aliases.cfg ]
[include RPi.cfg]
[include steppers.cfg]
[include sbcw2.cfg]
[include fans.cfg]
[include nevermore.cfg]
[include bedfans.cfg]
[include buttons.cfg]
[include btt_smart_sensor.cfg]
#[include ellis_macros.cfg]
[include heatsoak.cfg]
[include adaptive_mesh.cfg]
[include adaptive_purge.cfg]
[include github_backup.cfg]
[include chamber_leds.cfg]
[include stealthburner.cfg]
#[include stealthburner_leds.cfg]

## Voron Design VORON2 350mm BigTreeTech OctoPus V1.1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				    [gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Probe pin							[probe] section
## Fine tune E steps					[extruder] section

[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_420033000750534E4E313120-if00

#restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 350  
max_accel: 7000    			#Max 7000
max_accel_to_decel: 3500   #Half of Max
max_z_velocity: 50 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 10.0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: HE1
sensor_type: Generic 3950
sensor_pin: TB
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling

# Select the probe port by type:
## For the PROBE port; use this with the original OMRON sensor.
# pin: ~!PB7
## For the spare endstop port; use this with the Fotek PL-05N (or generic) inductive probe
#pin: ~PRB_3
## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
# pin: ^PC5

#--------------------------------------------------------------------

pin: ~PRB_3 #MLG Using Diag7 input with HW pull-up
x_offset: 0
y_offset: 19.75
z_offset: 8 #MLG 6.42
speed: 7
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3


#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Power Control
#####################################################################

[output_pin relay_control]
# BTT Relay 1.2 control input
pin: PS_ON
pwm: false
#shutdown_value: 0
value: 1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600
#timeout: 99999
gcode:
  UPDATE_DELAYED_GCODE ID=delayed_printer_standby DURATION=60

#[safe_z_home] #MLG  Not needed for Klicky
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:230, 350
#speed:100
#z_hop:10

[bed_mesh]
mesh_min: 40,40
mesh_max: 310,310
horizontal_move_z: 10
speed: 300
probe_count: 7,7
relative_reference_index: 12
algorithm: bicubic
#fade_start: 0.6
#fade_end: 10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
gantry_corners:
	-60,-10
	410,420
##	Probe points
points:
	50,25
	50,275
	300,275
	300,25

#--------------------------------------------------------------------
speed: 300     #MLG 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

#[board_pins]
#aliases:
#    # EXP1 header
#    EXP1_1=PE8, EXP1_2=PE7,
#    EXP1_3=PE9, EXP1_4=PE10,
#    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
#    EXP1_7=PE14, EXP1_8=PE15,
#    EXP1_9=<GND>, EXP1_10=<5V>,

#    # EXP2 header
#    EXP2_1=PA6, EXP2_2=PA5,
#    EXP2_3=PB1, EXP2_4=PA4,
#    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
#    EXP2_7=PC15, EXP2_8=<RST>,
#    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

[output_pin beeper]
pin: EXP1_1

[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2
spi_software_miso_pin: PA6
spi_software_mosi_pin: PA7
spi_software_sclk_pin: PA5

[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=3 

#####################################################################
# 	Thermistors
#####################################################################
[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: T1

[thermistor toolhead_temp]
temperature1: 25
resistance1: 10000
beta: 3950

[temperature_sensor toolhead]
sensor_type: toolhead_temp
sensor_pin: T2
min_temp: 0
max_temp: 100
gcode_id: C

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor octopus]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#[filament_motion_sensor smart_sensor]
#detection_length: 20
#extruder: extruder
#switch_pin: ^!SFS_3
#pause_on_runout: True
#runout_gcode:

#####################################################################
# 	Macros
#####################################################################

[include klicky-probe.cfg]

[include nozzle_scrub.cfg]

[gcode_macro _GLOBAL]
variable_lights: 0
gcode:
    M115

[gcode_macro LIGHT_TOGGLE]
gcode:
    {% if (printer["gcode_macro _GLOBAL"].lights) != 1 %}
        SET_LED LED=chamber_light GREEN=1 RED=1 BLUE=1 TRANSMIT=1
        SET_GCODE_VARIABLE MACRO=_GLOBAL VARIABLE=lights VALUE=1
    {% else %}
        SET_LED LED=chamber_light GREEN=0 RED=0 BLUE=0 TRANSMIT=1
        SET_GCODE_VARIABLE MACRO=_GLOBAL VARIABLE=lights VALUE=0
    {% endif %}


[gcode_macro T0]
#   Eliminate the Cura gcode warning
gcode:

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL
    G28 Z
    ##	Uncomment for for your size printer:
    #--------------------------------------------------------------------
    ##	Uncomment for 350mm build
    G0 X175 Y175 Z30 F3600
    #--------------------------------------------------------------------

[gcode_macro Test]
gcode:
    M118 Testing
#    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM=10
    MQTT_ALERT PAYLOAD="Testing from Voron"
    M118 Success

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
# This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  M118 # Clear display
  M118 Print start
  MQTT_ALERT PAYLOAD="Voron Print Started"
  SET_DISPLAY_TEXT MSG="Targets: {target_bed} {target_extruder} {target_chamber}"
  BED_MESH_CLEAR
  G28

  # Checks if the slicer target bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Heating Bed to: {target_bed}c"           # Displays info
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the slicer target bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    G4 P300000                                          # Waits 5 min for the bedtemp to stabilize
  {% endif %}

# Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    SET_DISPLAY_TEXT MSG="Preheat Hotend: 150c"  # Displays info
    M109 S150                                    # Heats the nozzle to 150c
    CLEAN_NOZZLE
    QUAD_GANTRY_LEVEL
    G28 Z
    G1 Z20 F3000                   ; move nozzle away from bed
    CALIBRATE_Z
#    BED_MESH_PROFILE LOAD=First_Layer
    BED_MESH_CALIBRATE
    
    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Heating Hotend to: {target_extruder}c"             # Displays info
    G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
    M107                                                          # Turns off partcooling fan
    M109 S{target_extruder}                                       # Heats the nozzle to printing temp
#    ADAPTIVE_PURGE
    SET_LED LED=chamber_light GREEN=1 RED=1 BLUE=1 TRANSMIT=1
    SET_FILAMENT_SENSOR SENSOR=smart_sensor ENABLE=0

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    SET_FILAMENT_SENSOR SENSOR=smart_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z10 F3000                    ; move nozzle up 10mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    #CLEAN_NOZZLE
    SET_LED LED=chamber_light GREEN=1 RED=0 BLUE=0 TRANSMIT=1
    M118 Print finished
    SET_DISPLAY_TEXT MSG="Print Finished"
    MQTT_ALERT PAYLOAD="Voron Print Finished"


[gcode_macro STANDBY]
gcode:
    SET_PIN PIN=relay_control VALUE=0 ; Switch BTT Relay off
    SET_LED LED=chamber_light GREEN=0 RED=0 BLUE=0 TRANSMIT=1 ; Switch off LEDs

[gcode_macro MQTT_ALERT]
gcode:
  {% set data = params.PAYLOAD|default("Alert from Voron") %}
  {action_call_remote_method("publish_mqtt_topic",
                             topic="klipper/alert",
                             payload=data,
                             qos=0,
                             retain=False,
                             use_prefix=True)}

[delayed_gcode DISABLEFILAMENTSENSOR]   
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=smart_sensor ENABLE=0

[delayed_gcode delayed_printer_standby]
initial_duration: 600
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    STANDBY
  {% endif %}

[delayed_gcode printer_shutdown]
gcode:
  {action_call_remote_method("shutdown_machine")}
initial_duration:0.0

[menu __main __poweroff]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Shutdown printer
gcode:
    M117 Shutdown_RPI
    M118 Shutdown_RPI
    { menu.exit() }
    UPDATE_DELAYED_GCODE ID=printer_shutdown DURATION=1

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.478
#*# pid_ki = 1.474
#*# pid_kd = 225.705
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.041
#*# pid_ki = 1.754
#*# pid_kd = 96.679
#*#
#*# [stepper_z]
#*# position_endstop = 1.500
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 55.6
#*# shaper_type_y = ei
#*# shaper_freq_y = 49.4
#*#
#*# [bed_mesh Mesh]
#*# version = 1
#*# points =
#*# 	-0.007500, 0.047500, 0.070000, 0.060000, -0.002500
#*# 	-0.025000, 0.015000, 0.057500, 0.022500, -0.032500
#*# 	-0.097500, -0.002500, 0.000000, -0.040000, -0.095000
#*# 	-0.037500, -0.005000, 0.012500, -0.012500, -0.055000
#*# 	0.012500, 0.055000, 0.067500, 0.077500, -0.002500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh cold]
#*# version = 1
#*# points =
#*# 	-0.010000, 0.047500, 0.072500, 0.062500, -0.000000
#*# 	-0.025000, 0.012500, 0.055000, 0.020000, -0.032500
#*# 	-0.097500, -0.002500, 0.000000, -0.042500, -0.095000
#*# 	-0.045000, -0.002500, 0.012500, -0.015000, -0.042500
#*# 	0.000000, 0.045000, 0.065000, 0.080000, -0.002500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh Heat_100]
#*# version = 1
#*# points =
#*# 	0.040000, 0.095000, 0.127500, 0.127500, 0.077500
#*# 	0.005000, 0.017500, 0.045000, 0.035000, 0.015000
#*# 	-0.087500, 0.002500, 0.000000, -0.022500, -0.047500
#*# 	-0.040000, 0.000000, 0.027500, 0.007500, -0.017500
#*# 	0.032500, 0.095000, 0.137500, 0.142500, 0.055000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh First_Layer]
#*# version = 1
#*# points =
#*# 	0.032500, 0.082500, 0.117500, 0.115000, 0.060000
#*# 	0.007500, 0.025000, 0.047500, 0.035000, -0.000000
#*# 	-0.065000, 0.010000, 0.000000, -0.032500, -0.072500
#*# 	-0.020000, 0.027500, 0.047500, 0.012500, -0.025000
#*# 	0.087500, 0.132500, 0.167500, 0.152500, 0.050000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh KlickyCold]
#*# version = 1
#*# points =
#*# 	-0.005000, 0.020000, 0.052500, 0.070000, 0.032500, 0.027500, -0.032500
#*# 	-0.060000, 0.012500, 0.045000, 0.040000, 0.030000, -0.005000, -0.055000
#*# 	-0.060000, 0.007500, 0.020000, 0.017500, 0.027500, -0.025000, -0.052500
#*# 	-0.082500, -0.047500, -0.010000, 0.000000, -0.012500, -0.050000, -0.077500
#*# 	-0.090000, 0.007500, 0.020000, 0.032500, 0.010000, -0.017500, -0.052500
#*# 	-0.032500, 0.005000, 0.040000, 0.052500, 0.032500, 0.010000, -0.032500
#*# 	-0.007500, 0.057500, 0.097500, 0.065000, 0.100000, 0.045000, 0.040000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 7
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh BackersCold]
#*# version = 1
#*# points =
#*# 	-0.045000, 0.025000, 0.052500, 0.030000, 0.045000, 0.042500, -0.025000
#*# 	-0.092500, -0.037500, 0.015000, 0.025000, 0.010000, -0.010000, -0.052500
#*# 	-0.095000, -0.020000, 0.012500, -0.012500, 0.017500, -0.025000, -0.060000
#*# 	-0.095000, -0.062500, -0.022500, 0.000000, -0.027500, -0.055000, -0.090000
#*# 	-0.105000, -0.032500, -0.012500, 0.002500, -0.020000, -0.045000, -0.080000
#*# 	-0.070000, -0.020000, 0.020000, 0.025000, 0.015000, 0.005000, -0.057500
#*# 	0.002500, 0.057500, 0.090000, 0.070000, 0.092500, 0.027500, 0.015000
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 7
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh BackersHot]
#*# version = 1
#*# points =
#*# 	-0.002500, 0.025000, 0.052500, 0.057500, 0.055000, 0.047500, 0.010000
#*# 	-0.047500, -0.000000, 0.030000, 0.040000, 0.030000, 0.012500, -0.022500
#*# 	-0.055000, 0.010000, 0.030000, 0.017500, 0.022500, -0.010000, -0.017500
#*# 	-0.047500, -0.030000, 0.002500, 0.000000, -0.007500, -0.035000, -0.050000
#*# 	-0.055000, 0.000000, 0.015000, 0.027500, 0.012500, -0.017500, -0.037500
#*# 	0.030000, 0.030000, 0.055000, 0.075000, 0.050000, 0.025000, 0.002500
#*# 	0.060000, 0.095000, 0.125000, 0.105000, 0.132500, 0.095000, 0.062500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 7
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
